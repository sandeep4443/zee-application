[{"D:\\react practise projects\\zee-network\\src\\index.js":"1","D:\\react practise projects\\zee-network\\src\\App.js":"2","D:\\react practise projects\\zee-network\\src\\reportWebVitals.js":"3","D:\\react practise projects\\zee-network\\src\\MoviesList\\MainPage.js":"4","D:\\react practise projects\\zee-network\\src\\Pagination\\Main.js":"5","D:\\react practise projects\\zee-network\\src\\Pagination\\DetailPage.js":"6","D:\\react practise projects\\zee-network\\src\\Pagination\\MoviesCard.js":"7","D:\\react practise projects\\zee-network\\src\\Pagination\\Pagination.js":"8","D:\\react practise projects\\zee-network\\src\\CheckBoxes.js":"9","D:\\react practise projects\\zee-network\\src\\actions\\selItems.js":"10","D:\\react practise projects\\zee-network\\src\\reducers\\selectedItemsReducer.js":"11","D:\\react practise projects\\zee-network\\src\\reducers\\movieDetailReducer.js":"12","D:\\react practise projects\\zee-network\\src\\reducers\\rootReducer.js":"13","D:\\react practise projects\\zee-network\\src\\MoviesList\\TableList.js":"14","D:\\react practise projects\\zee-network\\src\\MoviesList\\UpdateMovie.js":"15","D:\\react practise projects\\zee-network\\src\\MoviesList\\GenreList.js":"16","D:\\react practise projects\\zee-network\\src\\MoviesList\\DuplicateMoviesList.js":"17","D:\\react practise projects\\zee-network\\src\\MoviesList\\Buttons.js":"18","D:\\react practise projects\\zee-network\\src\\MoviesList\\AddMovie.js":"19","D:\\react practise projects\\zee-network\\src\\actions\\pageDetails.js":"20","D:\\react practise projects\\zee-network\\src\\store.js":"21"},{"size":279,"mtime":1612853772689,"results":"22","hashOfConfig":"23"},{"size":664,"mtime":1612853736823,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":6684,"mtime":1612867974628,"results":"26","hashOfConfig":"23"},{"size":3552,"mtime":1612863314812,"results":"27","hashOfConfig":"23"},{"size":2051,"mtime":1612867981639,"results":"28","hashOfConfig":"23"},{"size":1224,"mtime":1612863408923,"results":"29","hashOfConfig":"23"},{"size":6307,"mtime":1612862885372,"results":"30","hashOfConfig":"23"},{"size":3892,"mtime":1612861788207,"results":"31","hashOfConfig":"23"},{"size":97,"mtime":1612848219850,"results":"32","hashOfConfig":"23"},{"size":296,"mtime":1612849661469,"results":"33","hashOfConfig":"23"},{"size":336,"mtime":1612866509364,"results":"34","hashOfConfig":"23"},{"size":195,"mtime":1612851816851,"results":"35","hashOfConfig":"23"},{"size":1842,"mtime":1612857132747,"results":"36","hashOfConfig":"23"},{"size":574,"mtime":1612857421776,"results":"37","hashOfConfig":"23"},{"size":1052,"mtime":1612857362980,"results":"38","hashOfConfig":"23"},{"size":1878,"mtime":1612857294131,"results":"39","hashOfConfig":"23"},{"size":305,"mtime":1612857226401,"results":"40","hashOfConfig":"23"},{"size":1310,"mtime":1612857204264,"results":"41","hashOfConfig":"23"},{"size":128,"mtime":1612866545475,"results":"42","hashOfConfig":"23"},{"size":415,"mtime":1612852481573,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yp8lbm",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\react practise projects\\zee-network\\src\\index.js",[],["90","91"],"D:\\react practise projects\\zee-network\\src\\App.js",[],"D:\\react practise projects\\zee-network\\src\\reportWebVitals.js",[],["92","93"],"D:\\react practise projects\\zee-network\\src\\MoviesList\\MainPage.js",[],"D:\\react practise projects\\zee-network\\src\\Pagination\\Main.js",[],"D:\\react practise projects\\zee-network\\src\\Pagination\\DetailPage.js",[],"D:\\react practise projects\\zee-network\\src\\Pagination\\MoviesCard.js",["94"],"import { connect } from 'react-redux'; \r\nimport { pageDetails } from '../actions/pageDetails';\r\n\r\nconst MovieCard = ({ movie, value, history, detailPage }) => {\r\n    const navigateDetailPage = () => {\r\n        detailPage({ movie, value });\r\n        history.push(`/pagination/${value + 1}/${movie.Title}`);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"col-sm-6 col-md-4\">\r\n                <div className=\"border-gray rounded border mx-2 my-3 d-flex flex-row align-items-center p-0 bg-light\">\r\n                    <div className=\"h-100 position-relative border-gray border-right px-2 bg-white rounded-left\">\r\n                    </div>\r\n                    <div className=\"px-3\">\r\n                        <span className=\"text-dark d-block font-weight-bold\">\r\n                        <a onClick={() => navigateDetailPage()}>{movie.Title}</a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        detailPage: (items) => {\r\n            dispatch(pageDetails(items))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(MovieCard);\r\n","D:\\react practise projects\\zee-network\\src\\Pagination\\Pagination.js",["95","96","97"],"import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\nconst range = (from, to, step = 1) => {\r\n    let i = from;\r\n    const ranges = [];\r\n    while (i <= to) {\r\n        ranges.push(i);\r\n        i += step;\r\n    }\r\n    return ranges;\r\n};\r\n\r\n\r\nclass Pagination extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n        this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n        this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n        this.pageNeighbours = typeof pageNeighbours === \"number\" ? Math.max(0, Math.min(pageNeighbours, 2)) : 0;\r\n        this.totalPages = Math.ceil(this.totalRecords / this.pageLimit); this.state = { currentPage: 1 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gotoPage(1);\r\n    }\r\n\r\n\r\n    gotoPage = page => {\r\n        const { onPageChanged } = this.props;\r\n        const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n        const paginationData = { \r\n            currentPage, \r\n            totalPages: this.totalPages, \r\n            pageLimit: this.pageLimit,\r\n             totalRecords: this.totalRecords\r\n             };\r\n        this.setState({\r\n            currentPage\r\n        },\r\n            () => onPageChanged(paginationData));\r\n    };\r\n\r\n\r\n    handleClick = (page, evt) => {\r\n        evt.preventDefault();\r\n        this.gotoPage(page);\r\n    };\r\n\r\n    handleMoveLeft = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n    };\r\n\r\n    handleMoveRight = evt => {\r\n        evt.preventDefault();\r\n        this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n    };\r\n\r\n\r\n    fetchPageNumbers = () => {\r\n        const totalPages = this.totalPages;\r\n        const currentPage = this.state.currentPage;\r\n        const pageNeighbours = this.pageNeighbours;\r\n        const totalNumbers = this.pageNeighbours * 2 + 3;\r\n        const totalBlocks = totalNumbers + 2;\r\n        if (totalPages > totalBlocks) {\r\n            let pages = [];\r\n            const leftBound = currentPage - pageNeighbours;\r\n            const rightBound = currentPage + pageNeighbours;\r\n            const beforeLastPage = totalPages - 1;\r\n            const startPage = leftBound > 2 ? leftBound : 2;\r\n            const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n            pages = range(startPage, endPage);\r\n            const pagesCount = pages.length;\r\n            const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n            const leftSpill = startPage > 2;\r\n            const rightSpill = endPage < beforeLastPage;\r\n            const leftSpillPage = LEFT_PAGE;\r\n            const rightSpillPage = RIGHT_PAGE;\r\n            if (leftSpill && !rightSpill) {\r\n                const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n                pages = [leftSpillPage, ...extraPages, ...pages];\r\n            } else if (!leftSpill && rightSpill) {\r\n                const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n                pages = [...pages, ...extraPages, rightSpillPage];\r\n            } else if (leftSpill && rightSpill) {\r\n                pages = [leftSpillPage, ...pages, rightSpillPage];\r\n            }\r\n            return [1, ...pages, totalPages];\r\n        }\r\n        return range(1, totalPages);\r\n    };\r\n\r\n\r\n    render() {\r\n        if (!this.totalRecords) return null;\r\n        if (this.totalPages === 1) return null;\r\n        const { currentPage } = this.state;\r\n        const pages = this.fetchPageNumbers();\r\n        return (\r\n            <>\r\n                <nav aria-label=\"Countries Pagination\">\r\n                    <ul className=\"pagination\">\r\n                        {pages.map((page, index) => {\r\n                            if (page === LEFT_PAGE) \r\n                            return (\r\n                                <li key={index} className=\"page-item\">\r\n                                <a\r\n                                    className=\"page-link\"\r\n                                    href=\"#\" aria-label=\"Previous\"\r\n                                    onClick={this.handleMoveLeft}\r\n                                >\r\n                                    <span aria-hidden=\"true\">&laquo;</span>\r\n                                    <span className=\"sr-only\">Previous</span>\r\n                                </a>\r\n                            </li>\r\n                            );\r\n                            if (page === RIGHT_PAGE)\r\n                                return (\r\n                                    <li\r\n                                        key={index}\r\n                                        className=\"page-item\"\r\n                                    >\r\n                                        <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\r\n                                            <span aria-hidden=\"true\">&raquo;</span>\r\n                                            <span className=\"sr-only\">Next</span>\r\n                                        </a>\r\n                                    </li>\r\n                                );\r\n                            return (\r\n                                <li\r\n                                    key={index}\r\n                                    className={`page-item${currentPage === page ? \" active\" : \"\"}`}>\r\n                                    <a\r\n                                        className=\"page-link\"\r\n                                        href=\"#\"\r\n                                        onClick={e => this.handleClick(page, e)}>\r\n                                        {page}\r\n                                    </a>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </nav>\r\n            </>\r\n            );\r\n    }\r\n}\r\nPagination.propTypes = {\r\n    totalRecords: PropTypes.number.isRequired,\r\n    pageLimit: PropTypes.number,\r\n    pageNeighbours: PropTypes.number,\r\n    onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;","D:\\react practise projects\\zee-network\\src\\CheckBoxes.js",[],"D:\\react practise projects\\zee-network\\src\\actions\\selItems.js",[],"D:\\react practise projects\\zee-network\\src\\reducers\\selectedItemsReducer.js",[],"D:\\react practise projects\\zee-network\\src\\reducers\\movieDetailReducer.js",[],"D:\\react practise projects\\zee-network\\src\\reducers\\rootReducer.js",[],"D:\\react practise projects\\zee-network\\src\\MoviesList\\TableList.js",[],"D:\\react practise projects\\zee-network\\src\\MoviesList\\UpdateMovie.js",[],"D:\\react practise projects\\zee-network\\src\\MoviesList\\GenreList.js",[],"D:\\react practise projects\\zee-network\\src\\MoviesList\\DuplicateMoviesList.js",[],"D:\\react practise projects\\zee-network\\src\\MoviesList\\Buttons.js",[],"D:\\react practise projects\\zee-network\\src\\MoviesList\\AddMovie.js",[],"D:\\react practise projects\\zee-network\\src\\actions\\pageDetails.js",[],"D:\\react practise projects\\zee-network\\src\\store.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":17,"column":25,"nodeType":"106","endLine":17,"endColumn":65},{"ruleId":"104","severity":1,"message":"107","line":114,"column":33,"nodeType":"106","endLine":118,"endColumn":34},{"ruleId":"104","severity":1,"message":"107","line":130,"column":41,"nodeType":"106","endLine":130,"endColumn":124},{"ruleId":"104","severity":1,"message":"107","line":140,"column":37,"nodeType":"106","endLine":143,"endColumn":82},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]